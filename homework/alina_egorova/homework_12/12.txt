1. Что такое тестирование ПО?
Процесс испытания ПО для проверки соответствия между реальным и ожидаемым поведением программы.
________________________________________________________________________________________________________________________

2. Этапы SDLC, что значит каждый из них?
Анализ требований, планирование.
Анализ затрат и выгод, оценка и распределение ресурсов. Команда разработчиков собирает требования от
заинтересованных сторон, таких как клиенты, внутренние и внешние эксперты и менеджеры, чтобы создать документ
спецификации требований к ПО.

Проектирование и дизайн.
На данном этапе программисты анализируют требования и определяют наилучшие решения для создания ПО.

Разработка.
Написание кода учитывая анализ требований, и графический дизайн.

Тестирование.
Проверка правильно ли учтены требования которые были созданы на предыдущих этапах.

Развертывание, эксплуатация.
Передача ПО пользователю. Сопровождение. Определение новых способов улучшения разработанного ПО.
________________________________________________________________________________________________________________________

3. Какие этапы тестирования вы можете перечислить?
Анализ требований;
Планирование тестирования;
Разработка тестовых сценариев;
Тест-дизайн;
Подготовка к тестированию;
Выполнение тестирования;
Формализация результатов и подготовка отчетов.
________________________________________________________________________________________________________________________

4. Что такое регрессионное тестирование?
Это вид тестирования направленный на проверку изменений, сделанных в приложении, для подтверждения
того факта, что существующая ранее функциональность работает, как и прежде.
________________________________________________________________________________________________________________________

5. Что такое смоук тест?
Короткий цикл тестов, чтобы убедиться, что после сборки кода (нового или исправленного) приложение выполняет основные
функции.
________________________________________________________________________________________________________________________

6. Какие уровни тестирования вы знаете? Что тестируется на каждом из них?
Компонентное/модульное (component/unit testing)
Исследуется каждый отдельный элемент системы.

Интеграционное (integration testing)
Проверка взаимодействия отдельных модулей вместе.

Системное (system testing)
Проверка всей системы на наличие в ней багов. Тестирование работы всей системы.

Приемочное тестирование (acceptance testing)
Проверка соответствует ли разработанный продукт тем требованиям, которые выдвигал заказчик.

Тестирование методом черного ящика (black-box testing)
Проверка работы ПО с точки зрения пользователя у которого нет знаний о том, как устроена и работает внутренняя система.
________________________________________________________________________________________________________________________

7. Расскажите об основных особенностях Agile методологии (кратко).
Agile - это пошаговый подход к разработке софта, и к управлению проектами.

Философию Agile можно описать как набор принципов, поощряющих гибкость, адаптируемость, коммуникацию.
1. Люди, взаимодействие между ними, важнее процессов.
Agile ценит коммуникации выше, чем рабочие процессы.
2. Рабочее программное обеспечение важнее документации.
Agile-подход не избавляет от необходимости оформления бумаг. Но методика подразумевает создание понятных инструкций, по
которым каждый работник сможет быстро узнать над чем ему нужно работать.
3. Постоянное взаимодействие с клиентами вместо переговоров до заключения контракта.
Agile использует метод включающий сотрудничество с клиентами в процессе работы. Это упрощает внесение любых изменений,
сокращает общие сроки реализации задачи.
4. Внесение изменений вместо строгого следования плану.
Команда изначально готовится работать в условиях постоянных изменений.
________________________________________________________________________________________________________________________

8. Какими характеристиками должны обладать хорошие требования?

Полнота. Описание всего того, что требуется от разрабатываемой системы;

Понятность. Требование должно излагаться последовательно, без грамматических ошибок;

Последовательность. Требование не должно противоречить другим требованиям и ограничениям системы;

Недвусмысленность. Должна существовать только одна трактовка требования;

Четкость (краткость). Не должно содержать лишней информации;

Осуществимость. Должно выполняться в рамках существующих ограничений (время, деньги, ресурсы);

Абстрактность. В требовании не должно содержаться информации о том как оно будет реализовано.
________________________________________________________________________________________________________________________